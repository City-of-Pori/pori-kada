<?php

/**
 * @file
 * Provides functionality for using ET UI through Scald's DnD UI.
 */

/**
 * Implements hook_menu().
 *
 * These callbacks wrap entity translation callbacks
 * with ctools_modal_render which is needed for DnD modal popups.
 * The page/access arguments are hideous thanks to the way ET callbacks are.
 */
function kada_scald_dnd_translation_menu() {
  $items['atom/%scald_atom/translate/dnd'] = array(
    'page callback' => 'kada_scald_dnd_translation_overview',
    'page arguments' => array(1),
    'access callback' => 'entity_translation_tab_access',
    'access arguments' => array('scald_atom', 1),
  );
  $items['atom/%scald_atom/edit/%ctools_js/add/%entity_translation_language/%entity_translation_language/dnd'] = array(
    'page callback' => 'kada_scald_dnd_translation_add_translation',
    'page arguments' => array(1, 5, 6, 3),
  // WTF.
    'access callback' => 'entity_translation_tab_access',
    'access arguments' => array('scald_atom', 1, 5, 6, NULL, 1, 'edit'),
  );
  $items['atom/%scald_atom/edit/%ctools_js/%entity_translation_language/dnd'] = array(
    'page callback' => 'kada_scald_dnd_translation_edit_translation',
    'page arguments' => array(1, 4, 3),
    'access callback' => 'entity_translation_edit_access',
    'access arguments' => array('scald_atom', 1, 4, array(
      'page callback' => 'scald_atom_edit_page',
      'page arguments' => array(3, 1),
      'access callback' => 'scald_action_permitted',
      'access arguments' => array(1, 'edit'),
      'file' => 'includes/scald.pages.inc',
  // seriously, WTF.
      'module' => 'scald',
    ), 1, 'edit',
    ),
  );
  return $items;
}

/**
 * Provide the DnD UI a modalified ET overview page for the selected atom.
 *
 * @todo: better error handling
 */
function kada_scald_dnd_translation_overview($atom) {
  module_load_include('inc', 'entity_translation', 'entity_translation.admin');
  $output = entity_translation_overview('scald_atom', $atom);
  foreach ($output['entity_translation_overview']['#rows'] as &$row) {
    // Add /dnd to the path of each link.
    $row['data'][4] = preg_replace('/(href=\"[^"]+)/', '${1}/dnd', $row['data'][4]);
    $row['data'][4] = preg_replace('/(class=\"[^"]+)/', '${1} ctools-use-modal ctools-modal-custom-style', $row['data'][4]);
  }

  ctools_include('modal');
  $output = render($output);
  return ctools_modal_render(t('Translate'), $output);
}

/**
 * Documentation (@TODO).
 */
function kada_scald_dnd_translation_add_translation($atom, $source_lang, $target_lang, $ctools_mode) {
  $callback_config = array(
    'page callback' => 'scald_atom_edit_page',
    'file' => 'includes/scald.pages.inc',
    'module' => 'scald',
  );
  $output = entity_translation_add_page('scald_atom', $atom, $source_lang, $target_lang, $callback_config, 1, $atom);
  ctools_include('modal');
  $output = render($output);
  return ctools_modal_render(t('Translate'), $output);
}

/**
 * Documentation (@TODO).
 */
function kada_scald_dnd_translation_edit_translation($atom, $source_lang, $ctools_mode) {
  $callback_config = array(
    'page callback' => 'scald_atom_edit_page',
    'file' => 'includes/scald.pages.inc',
    'module' => 'scald',
  );
  $output = entity_translation_edit_page('scald_atom', $atom, $source_lang, $callback_config, 1, $atom);
  ctools_include('modal');
  $output = render($output);
  return ctools_modal_render(t('Translate'), $output);
}

/**
 * Implements hook_entity_presave().
 */
function kada_scald_dnd_translation_entity_presave($entity, $type) {
  // Work around scald's language issues when adding translations.
  if ($type != 'scald_atom') {
    return;
  }
  if (!empty($entity->sid)) {
    $entity->translations->original = $entity->language;
    foreach ($entity->translations->data as $lang => &$translation) {
      if ($lang != $entity->language) {
        $translation['source'] = $entity->language;
      }
    }
  }
}

/**
 * Implements hook_forms().
 */
function kada_scald_dnd_translation_forms($form_id, $args) {
  if ($form_id == 'scald_atom_add_form_options') {
    module_load_include('inc', 'scald', 'includes/scald.pages');
  }
}

/**
 * Implements hook_scald_atom_user_build_actions_links_alter().
 */
function kada_scald_dnd_translation_scald_atom_user_build_actions_links_alter(&$links, $atom) {
  // Add translate link
  // Link URL depends if user is in content list or using DnD when creating
  // or editing a node.
  if (arg(2) == 'atoms') {
    $href = 'atom/' . $atom->sid . "/translate";
  }
  else {
    $href = 'atom/' . $atom->sid . "/translate/dnd/nojs";
  }
  $links['translate'] = array(
    'title' => t('Translate'),
    'href' => $href,
  );
  $links['translate']['attributes'] = array(
    'class' => array('ctools-use-modal', 'ctools-modal-custom-style'),
  );
}
