<?php
/**
 * @file
 * Code for the Pori Contact information feature.
 */

include_once 'pori_contact_information_feature.features.inc';

/**
 * Implements hook_feeds_presave().
 */
function pori_contact_information_feature_feeds_presave($source, $entity, $item, $entity_id) {
  if ($source->id == 'phone_csv') {
    // Skip if email is empty.
    if(empty($item['sahkoposti'])) {
      $entity->feeds_item->skip = TRUE;
    }
    // Replace comma followed by a post code with newline and the post code.
    // Newlines don't work in Feeds Tamper.
    foreach ($entity->field_visiting_address as $lang => &$addr_item) {
      $cityparts = array();
      if (!empty($item['postinumero'])) {
        $cityparts[] = $item['postinumero'];
      }
      if (!empty($item['paikkakunta'])) {
        $cityparts[] = $item['paikkakunta'];
      }
      if (!empty($cityparts)) {
        $addr_item[0]['value'] .= "\n" . implode(' ', $cityparts);
      }
    }
    if (!preg_match('/^(0|\+358)/', $entity->field_mobile_phone_work['und'][0]['value'])) {
      $entity->field_mobile_phone_work['und'][0]['value'] = '0' . $entity->field_mobile_phone_work['und'][0]['value'];
    }
  }
}

/**
 * Implements hook_cron().
 *
 * Contact information Feeds importers need to be run in a controlled order.
 * This is done by adding them to hook_cron and managing the order manually,
 * instead of relying on default Feeds cron implementation.
 */
function pori_contact_information_feature_cron() {
  watchdog('pori_contact_information', 'Running contact information feed importers...');

  $path = 'private://transfer/puhelinluettelo.csv';
  // If reading the file fails or it's empty.
  if (! ($content = file_get_contents($path)) || empty($content)) {
    watchdog('pori_contact_information', 'Skipping phone importer because of empty source file in path !path...', array('!path' => $path));
  }

  do {
    // Reset the continue trigger.
    $incomplete = FALSE;
    $source = feeds_source('phone_csv');
    if ($source->imported + 21600 < time()) {
      watchdog('pori_contact_information', "Starting import !id at !progress%", array('!id' => $source->id, '!progress' => round($source->progressImporting() * 100)));
      $config = $source->getConfig();
      $config['FeedsFileFetcher']['source'] = $path;
      $source->setConfig($config);
      $source->save();
      $source->import();
      watchdog('pori_contact_information', "Ended import !id at !progress%", array('!id' => $source->id, '!progress' => round($source->progressImporting() * 100)));
      // If we didn't reach 100%, abort foreach loop to prevent extending to
      // next importer.
      if ($source->progressImporting() !== 1) {
        $incomplete = TRUE;
      }
    }
  } while ($incomplete);
}

/**
 * Implements hook_preprocess_node().
 */
function pori_contact_information_feature_preprocess_node(&$vars) {
  $node = $vars['node'];
  $parts = array();
  if (!empty($node->field_unit)) {
    $parts[] = reset($node->field_unit['und'])['value'];
  }
  if (!empty($node->field_activity_unit)) {
    $parts[] = reset($node->field_activity_unit['und'])['value'];
  }
  $vars['person_organisation'] = implode(' / ', $parts);
}
