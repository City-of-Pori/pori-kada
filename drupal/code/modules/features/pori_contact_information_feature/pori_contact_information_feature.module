<?php
/**
 * @file
 * Code for the Pori Contact information feature.
 */

include_once 'pori_contact_information_feature.features.inc';

/**
 * Implements hook_feeds_presave().
 */
function pori_contact_information_feature_feeds_presave($source, $entity, $item, $entity_id) {
  if ($source->id == 'phone_csv') {
    // Replace comma followed by a post code with newline and the post code.
    // Newlines don't work in Feeds Tamper.
    foreach ($entity->field_visiting_address as $lang => &$addr_item) {
      if (isset($addr_item[0]['value'])) {
        $addr_item[0]['value'] = preg_replace('/,\W*([0-9]{5})/', "\n\\1", $addr_item[0]['value']);
      }
    }
  }
}

/**
 * Implements hook_cron().
 *
 * Contact information Feeds importers need to be run in a controlled order.
 * This is done by adding them to hook_cron and managing the order manually,
 * instead of relying on default Feeds cron implementation.
 */
function pori_contact_information_feature_cron() {
  $importers = array(
    'phone_csv' => 'private://transfer/Directory_Entries_26841_295309_.csv',
  );
  watchdog('pori_contact_information', 'Running contact information feed importers...');

  foreach ($importers as $id => $source_url) {
    // Check that the source file isn't empty.
    $path = drupal_realpath($source_url);
    $content = file_get_contents($path);
    if (empty($content)) {
      watchdog('pori_contact_information', 'Skipping importer !importer because of empty source file in path !path...', array('!importer' => $id, '!path' => $path));
      continue;
    }

    while (!isset($incomplete) || $incomplete) {
      // Reset the continue trigger.
      $incomplete = FALSE;
      $source = feeds_source($id);
      if ($source->imported + 21600 < time()) {
        watchdog('pori_contact_information', "Starting import !id at !progress%", array('!id' => $id, '!progress' => round($source->progressImporting() * 100)));
        $config = $source->getConfig();
        $config['FeedsFileFetcher']['source'] = $source_url;
        $source->setConfig($config);
        $source->save();
        $source->import();
        watchdog('pori_contact_information', "Ended import !id at !progress%", array('!id' => $id, '!progress' => round($source->progressImporting() * 100)));
        // If we didn't reach 100%, abort foreach loop to prevent extending to
        // next importer.
        if ($source->progressImporting() !== 1) {
          $incomplete = TRUE;
        }
      }
    }
  }
}

/**
 * Implements hook_preprocess_node().
 */
function pori_contact_information_feature_preprocess_node(&$vars) {
  $node = $vars['node'];
  if (isset($node->field_branch) && isset($node->field_unit)) {
    $parts = array();
    if (!empty($node->field_branch)) {
      $parts[] = reset($node->field_branch['und'])['value'];
    }
    if (!empty($node->field_unit)) {
      $parts[] = reset($node->field_unit['und'])['value'];
    }
    $vars['person_organisation'] = implode(' | ', $parts);
  }
  if (!empty($node->field_availability)) {
    $vars['person_availability'] = t('Available') . ' ' . lcfirst(reset($node->field_availability['und'])['value']) . '.';
  }
}
