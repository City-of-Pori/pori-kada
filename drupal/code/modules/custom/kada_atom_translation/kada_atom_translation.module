<?php

/**
 * @file
 * Adds needed form alters and other code fixes for atom translation.
 */

/**
 * Implements hook_form_alter().
 */
function kada_atom_translation_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id != 'scald_atom_add_form_options') {
    return;
  }
  // Hack around issue that breaks entity translation in DnD.
  // The culprit is scald_atom_add_page in scald.pages.inc.
  if (!isset($form_state['atom']) && isset($form_state['scald']['atoms'][0])) {
    $form_state['atom'] = $form_state['scald']['atoms'][0];
  }

  // TO-DO: Check if this one is really needed in KADA.
  kada_atom_translation_copy_and_hide_title_on_add($form);
  kada_atom_translation_add_delete_translation($form);

  // Hide original title.
  $atom_index = 0;
  while (isset($form['atom' . $atom_index])) {
    $form['atom' . $atom_index]['title']['#access'] = FALSE;
    $atom_index++;
  }
  $form['#after_build'][] = 'kada_atom_translation_hide_language_switcher';
}

/**
 * Documentation (@TODO).
 */
function kada_atom_translation_copy_and_hide_title_on_add(&$form) {
  // Only trigger on ORIGINAL forms.
  if (kada_atom_translation_is_translation_form($form)) {
    return;
  }

  // Only trigger on add.
  if (arg(1) != 'add') {
    return;
  }
  $bundle = $form['atom0']['#bundle'];
  $title_field_name = 'scald_' . $bundle . '_title';
  // Do not try to populate the field if it does not exist.
  if (!isset($form['atom0'][$title_field_name])) {
    return;
  }

  // Copy original title to the new title field.
  $field_language = $form['atom0'][$title_field_name]['#language'];
  $form['atom0'][$title_field_name][$field_language][0]['value']['#default_value'] = $form['atom0']['title']['#default_value'];
}

/**
 * Documentation (@TODO).
 */
function kada_atom_translation_add_delete_translation(&$form) {
  // Only trigger on translation forms.
  if (!kada_atom_translation_is_translation_form($form)) {
    return;
  }

  // Only trigger on edit.
  if (arg(4) == 'add') {
    return;
  }

  $form['buttons']['delete_translation'] = array(
    '#type' => 'submit',
    '#value' => t('Delete translation'),
    '#weight' => 2000,
    '#submit' => array('kada_atom_translation_delete_translation_submit'),
  );
}

/**
 * Redirect to translation deletion.
 *
 * @param string $form_id
 *   The form id.
 * @param array $form_state
 *   Array containing the current form state.
 */
function kada_atom_translation_delete_translation_submit($form_id, &$form_state) {
  // Craft the translation deletion URL and add it as a redirect url.
  $atom_id  = arg(1);
  $translation_language = arg(4);
  $deletion_path = 'atom/' . $atom_id . '/translate/delete/' . $translation_language;
  $form_state['redirect'] = $deletion_path;
}

/**
 * Check if form is a translation form.
 */
function kada_atom_translation_is_translation_form($form) {
  // Init language info.
  $entity = $form['atom0']['#entity'];
  if (!isset($entity->translations)) {
    return FALSE;
  }
  $translation_info = $entity->translations;
  $translatable_languages = array_keys($translation_info->data);
  $translation_language = arg(4);

  // Original language form is not a translation form.
  if ($translation_language == $translation_info->original) {
    return FALSE;
  }

  // The language is not in translatable languages.
  if (!in_array($translation_language, $translatable_languages)) {
    return FALSE;
  }

  return TRUE;
}

/**
 * Documentation (@TODO).
 */
function kada_atom_translation_hide_language_switcher(&$form, &$form_state) {
  if (empty($form['atom0']['#entity']->sid)) {
    $form['language']['#weight'] = 900;
    return $form;
  }
  $form['language']['#access'] = FALSE;
  return $form;
}
