/*******************************************************************************
 * driveturku-front.layout.scss
 *
 * Layout built with Singularity for DriveTurku front page.
 ******************************************************************************/
@media screen and (min-width: 768px) {
  .l-header {
    height: 0;
    padding-bottom: 47.26%;
  }
}

.l-branding,
.l-navigation {
  z-index: 4;
  left: 0;
  position: relative;
  top: 0;
}

@media screen and (min-width: 960px) {
  .l-branding,
  .l-navigation {
    left: auto;
    position: relative;
    top: auto;
  }
}

.l-before-header {
  z-index: 4;
  position: relative;
}

.l-branding {
  z-index: 5;
}

.l-navigation {
  background-color: rgba(0, 55, 94, 0.7);
  padding: 13px 0;
  width: 100%;
}

@media screen and (min-width: 960px) {
  .l-navigation {
    background-color: #fafafa;
    padding: 0;
  }
}

.l-before-content,
.l-main-wrapper {
  background: url("../../../images/bg_pattern.png") repeat 0 0 #fff;
  clear: both;
  overflow: hidden;
}

.l-after-content {
  background: none 0 0 #B5B5B5;
}

.l-main {
  background-color: #fff;
}

.l-main:before, .l-main:after {
  content: "";
  display: table;
}

.l-main:after {
  clear: both;
}

@media screen and (min-width: 768px) {
  .l-highlighted .l-region,
  .l-main,
  .l-before-content .l-region,
  .l-after-content .l-region,
  .l-footer .l-footer-content {
    float: none;
    margin: 0 auto;
    max-width: 1320px;
  }
}

.l-highlighted {
  background-color: #acacac;
}

@media screen and (min-width: 768px) {
  .l-region--sidebar-first {
    width: 22.85714%;
    float: left;
    margin-right: 2.85714%;
    padding-left: 16px;
  }
}

@media screen and (min-width: 768px) {
  .l-region--sidebar-second {
    padding-right: 16px;
  }
}

@media screen and (min-width: 768px) {
  .l-content {
    width: 100%;
    float: left;
    margin-left: 0;
    margin-right: 0;
    padding: 0 16px;
  }
}

@media screen and (min-width: 768px) {
  .l-page.has-one-sidebar.has-sidebar-first .l-content {
    padding: 0 16px 0 0;
  }
}

@media screen and (min-width: 768px) {
  .l-page.has-one-sidebar.has-sidebar-second .l-content {
    width: 74.28571%;
    float: left;
    margin-right: 2.85714%;
    padding: 0 0 0 16px;
  }
}

@media screen and (min-width: 768px) {
  .l-page.has-two-sidebars .l-content {
    padding: 0;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
