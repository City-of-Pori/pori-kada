/*******************************************************************************
 * kada-default.layout.scss
 *
 * Layout built with Susy 2.
 ******************************************************************************/
.l-before-content,
.l-after-content {
  background: none 0 0 #B5B5B5;
}

.l-main {
  background-color: #fff;
}

.l-main:before, .l-main:after {
  content: "";
  display: table;
}

.l-main:after {
  clear: both;
}

.l-content .l-region--before-content {
  margin: 0;
}

@media screen and (min-width: 48em) {
  .l-region--sidebar-first {
    width: 31.1828%;
    float: left;
    margin-right: 3.22581%;
    padding-left: 16px;
  }
}

@media screen and (min-width: 60em) {
  .l-region--sidebar-first {
    width: 22.58065%;
    float: left;
    margin-right: 3.22581%;
    padding-left: 16px;
  }
}

@media screen and (min-width: 48em) {
  .l-region--sidebar-second {
    width: 22.58065%;
    float: right;
    margin-right: 0;
    padding-right: 16px;
  }
}

@media screen and (min-width: 48em) {
  .l-content {
    width: 100%;
    float: left;
    margin-left: 0;
    margin-right: 0;
    padding: 0 16px;
  }
}

@media screen and (min-width: 48em) {
  .l-page.has-one-sidebar.has-sidebar-first .l-content {
    width: 65.5914%;
    float: right;
    margin-right: 0;
    padding: 0 16px 0 0;
  }
}

@media screen and (min-width: 60em) {
  .l-page.has-one-sidebar.has-sidebar-first .l-content {
    width: 74.19355%;
    float: right;
    margin-right: 0;
    padding: 0 16px 0 0;
  }
}

@media screen and (min-width: 48em) {
  .l-page.has-one-sidebar.has-sidebar-second .l-content {
    width: 74.19355%;
    float: left;
    margin-right: 3.22581%;
    padding: 0 0 0 16px;
  }
}

@media screen and (min-width: 48em) {
  .l-page.has-two-sidebars .l-content {
    width: 39.78495%;
    float: left;
    margin-right: 3.22581%;
    padding: 0;
  }
}

@media screen and (min-width: 60em) {
  .l-page.has-two-sidebars .l-content {
    width: 48.3871%;
    float: left;
    margin-right: 3.22581%;
    padding: 0;
  }
}

.has-main-image .l-before-header {
  z-index: 4;
  position: relative;
}

.has-main-image .l-branding {
  z-index: 5;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
